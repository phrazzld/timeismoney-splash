name: Accessibility Tests

on:
  push:
    branches: ['main', 'master']
  pull_request:
    branches: ['main', 'master']

jobs:
  accessibility:
    name: Accessibility Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@8.15.6 --activate

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Run accessibility tests
        run: pnpm test:e2e:accessibility
        env:
          CI: true
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report-${{ github.sha }}
          path: |
            playwright-report/
            test-results/
            accessibility-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: accessibility-test-results-${{ github.sha }}
          path: test-results/
          retention-days: 30

      - name: Comment PR with accessibility results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Try to read test results
            let comment = '## 🔍 Accessibility Test Results\n\n';

            try {
              // Check if tests passed by looking at the job status
              const jobStatus = '${{ job.status }}';
              
              if (jobStatus === 'success') {
                comment += '✅ **All accessibility tests passed!**\n\n';
                comment += '- ✓ Keyboard navigation validated\n';
                comment += '- ✓ Color contrast compliance verified\n';
                comment += '- ✓ Screen reader compatibility tested\n';
                comment += '- ✓ WCAG 2.1 AA standards met\n';
              } else {
                comment += '❌ **Accessibility tests failed**\n\n';
                comment += 'Please check the [test artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.\n';
              }
            } catch (error) {
              comment += '⚠️ Unable to parse test results. Please check the workflow logs.\n';
            }

            comment += '\n---\n';
            comment += `🔗 [View Full Report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
            comment += `📅 Run: ${new Date().toISOString()}\n`;
            comment += `🏷️ Commit: ${{ github.sha }}`;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Accessibility Test Results')
            );

            // Update or create comment
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment,
              });
            }

  # Run accessibility tests in multiple browsers (optional)
  accessibility-cross-browser:
    name: Cross-Browser Accessibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare pnpm@8.15.6 --activate

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Run accessibility tests - ${{ matrix.browser }}
        run: pnpm exec playwright test --grep @accessibility --project=${{ matrix.browser }}
        env:
          CI: true
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Upload browser-specific report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: accessibility-${{ matrix.browser }}-${{ github.sha }}
          path: test-results/
          retention-days: 30
